//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceMarketplace.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ServiceMarketplace.Common.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot remove all tags. The service must have at least one tag.
        /// </summary>
        public static string CannotRemoveAllTags {
            get {
                return ResourceManager.GetString("CannotRemoveAllTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A category with this name has already been added.
        /// </summary>
        public static string ExistsCategoryName {
            get {
                return ResourceManager.GetString("ExistsCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A city with this name has already been added.
        /// </summary>
        public static string ExistsCityName {
            get {
                return ResourceManager.GetString("ExistsCityName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You already have a service registered with this name.
        /// </summary>
        public static string ExistsServiceName {
            get {
                return ResourceManager.GetString("ExistsServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag one you want to add for this service already exists.
        /// </summary>
        public static string ExistsServiceTag {
            get {
                return ResourceManager.GetString("ExistsServiceTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A sub-category with this name has already been added.
        /// </summary>
        public static string ExistsSubCategoryName {
            get {
                return ResourceManager.GetString("ExistsSubCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A tag with this name has already been added.
        /// </summary>
        public static string ExistsTag {
            get {
                return ResourceManager.GetString("ExistsTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of this field should be between {MinLength} and {MaxLength} characters..
        /// </summary>
        public static string FieldLength {
            get {
                return ResourceManager.GetString("FieldLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no such category.
        /// </summary>
        public static string NotFoundCategory {
            get {
                return ResourceManager.GetString("NotFoundCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no such city.
        /// </summary>
        public static string NotFoundCity {
            get {
                return ResourceManager.GetString("NotFoundCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no such service.
        /// </summary>
        public static string NotFoundService {
            get {
                return ResourceManager.GetString("NotFoundService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The city you want to remove is not valid for this service.
        /// </summary>
        public static string NotFoundServiceCity {
            get {
                return ResourceManager.GetString("NotFoundServiceCity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag you want to remove is not valid for this service.
        /// </summary>
        public static string NotFoundServiceTag {
            get {
                return ResourceManager.GetString("NotFoundServiceTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no such tag.
        /// </summary>
        public static string NotFoundTag {
            get {
                return ResourceManager.GetString("NotFoundTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field required.
        /// </summary>
        public static string RequiredField {
            get {
                return ResourceManager.GetString("RequiredField", resourceCulture);
            }
        }
    }
}
